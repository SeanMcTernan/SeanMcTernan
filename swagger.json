{
    "openapi": "3.0.0",
    "servers": [
        {
            "description": "SimpleTexting API V1",
            "url": "https://app2.simpletexting.com/v1"
        }
    ],
    "info": {
        "description": "# Introduction  \n\nThousands of businesses rely on SimpleTexting to communicate with their audience via text message. With our API, developers can access many of our platform’s features and integrate them with other websites or applications.\n\nThis document details the available SimpleTexting API functions and their parameters.\n\nTo prevent spam, our API is by approval only. If you’d like access, sign up for a trial account and email [support@simpletexting.net](support@simpletexting.net) with details about your use case.\n\n ### How it works \nOur API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). It uses standard HTTP response codes and authentication. Before you get started, there a few things to keep in mind:<ul><li>When using the POST request, you must specify that `content-type` is `application/x-www-form-urlencoded`.</li><li>The default response for all requests is JSON. To use XML, you must change the value for the `Accept` request header to `application/xml`.</li><li>If the message contains a link from a common third-party link shortener such a bit.ly, it will appear from our URL shortener instead and occupy 20 characters. [Learn more](https://help.simpletexting.com/en/articles/3362741-why-carriers-don-t-allow-bit-ly-and-other-third-party-link-shorteners).</li></ul>\n\n# Authentication\n\nEach time you make a request to our API, we use an API token to authenticate your account. API requests without authentication will fail. Your API token can be found under [settings](https://app2.simpletexting.com/account/api).<br><br>Please be sure to keep your bearer token secure. Don’t share it any public areas such as GitHub, client-side code, etc.\n\nThe SimpleTexting V1 API offers two forms of authentication, an API key and a Bearer Token.\n\n<SecurityDefinitions />\n",
        "version": "1.0.0",
        "title": "SimpleTexting REST API Documentation"
    },
    "tags": [
        {
            "name": "Webhooks",
            "description": "Use webhooks to communicate between the SimpleTexting platform and your server. Webhooks can be used to forward messages as well as provide info about unsubscribes and message delivery.<br><br>SimpleTexting can trigger webhooks for new incoming messages, delivery reports and unsubscribes. Now you can build scripts that interpret and respond to events that occur in your SimpleTexting account!<br><br>To set the URLs for your webhooks, visit the Webhooks tab on the API section of [settings](https://app2.simpletexting.com/account/api)."
        },
        {
            "name": "Messages",
            "description": "In SimpleTexting, users can send and receive messages. With our API, this can be done programmatically."
        },
        {
            "name": "Contacts",
            "description": "At a minimum, each contact in SimpleTexting must have a phone number. Contacts can also hold additional information including first name, last name, and email address. You can also create custom fields to store data specific to your website or app’s needs."
        },
        {
            "name": "Keywords",
            "description": "A [keyword](https://help.simpletexting.com/en/articles/1071268-setting-up-a-keyword) is a word or phrase that people can text to your number to subscriber to future messages. All SimpleTexting accounts come with unlimited keywords."
        },
        {
            "name": "Analytics",
            "description": "Autoresponders are messages that go out a set period of time after a contact joins your list. Use the calls below to find out more about your autoresponders. For other analytics info, log into your SimpleTexting account and visit the [analytics section](https://app2.simpletexting.com/analytics/links)."
        }
    ],
    "paths": {
        "/delivery.php": {
            "post": {
                "servers": [
                    {
                        "url": "https://www.yourdomain.com"
                    }
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Delivery report",
                "operationId": "deliveryReport",
                "description": "Triggers when an outgoing message is reported as delivered or undelivered by the carrier.<br><br><h3>Example</h3><br>`http://www.yourdomain.com/delivery.php` <br><br> with JSON body: `{ 'id': '5bec5b9d0a975a238808ffb2', 'type': 'SMS', 'status': 'delivered', 'destination': '1234567890', 'carrier': 'Sprint' }` <br><br>`http://www.yourdomain.com/delivery.php` has been set as delivery report webhook for this example. The SimpleTexting server will invoke the given call when a message with the `smsid` `5bec5b9d0a975a238808ffb2` is delivered. <br><br> Sent as POST.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The unique identifier which was provided in message sending response (`smsid`).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "5bec5b9d0a975a238808ffb2"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "Type of a message the delivery report has been received for.<br><br>`SMS` or `MMS`",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SMS",
                                "MMS"
                            ],
                            "example": "SMS"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "description": "`Delivered` (The carrier has provided confirmation of message delivery.)<br><br>`Undelivered` (Among other reasons, this may occur if the handset was unreachable, the number was a landline, or the carrier blocked the content.)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "delivered",
                                "undelivered"
                            ],
                            "example": "delivered"
                        }
                    },
                    {
                        "in": "query",
                        "name": "destination",
                        "description": "The phone number to which the message was sent.",
                        "schema": {
                            "type": "string",
                            "example": "9545551234"
                        }
                    },
                    {
                        "in": "query",
                        "name": "carrier",
                        "description": "The message recipient’s telecom provider (e.g. AT&T, Verizon).",
                        "schema": {
                            "type": "string",
                            "example": "Sprint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\");\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\");\nvar request = new RestRequest(Method.POST);\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\")\n  .post(null)\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\",\n  \"method\": \"POST\",\n  \"headers\": {}\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"yourdomain.com\",\n  \"port\": null,\n  \"path\": \"/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\",\n  \"headers\": {}\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://yourdomain.com/v1/delivery.php',\n  qs: {\n    id: '5bec5b9d0a975a238808ffb2',\n    type: 'SMS',\n    status: 'delivered',\n    destination: '9545551234',\n    carrier: 'Sprint'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"yourdomain.com\")\n\nconn.request(\"POST\", \"/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint'"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --output-document \\\n  - 'https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://yourdomain.com/v1/delivery.php?id=5bec5b9d0a975a238808ffb2&type=SMS&status=delivered&destination=9545551234&carrier=Sprint\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/unsubscribe.php": {
            "post": {
                "servers": [
                    {
                        "url": "https://www.yourdomain.com"
                    }
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Unsubscribe report",
                "operationId": "unsubscribeReport",
                "description": "Triggers on any unsubscribe. This can be a subscriber texting STOP or a user manually blocking a subscriber via the SimpleTexting UI.<br><br><br><h3>Example</h3><br>`http://www.yourdomain.com/unsubcscribe.php` <br><br> With JSON body: `{ 'phone': '9545551234' }` <br><br> `http://www.yourdomain.com/unsubscribe.php` has been set as the unsubscribe report URL for this example. The SimpleTexting server will invoke the given call when the subscriber with the number 954-555-1234 unsubscribes.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "Subscriber’s phone number.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "9545551234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\");\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\");\nvar request = new RestRequest(Method.POST);\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\")\n  .post(null)\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\",\n  \"method\": \"POST\",\n  \"headers\": {}\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"yourdomain.com\",\n  \"port\": null,\n  \"path\": \"/v1/unsubscribe.php?phone=9545551234\",\n  \"headers\": {}\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://yourdomain.com/v1/unsubscribe.php',\n  qs: {phone: '9545551234'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"yourdomain.com\")\n\nconn.request(\"POST\", \"/v1/unsubscribe.php?phone=9545551234\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://yourdomain.com/v1/unsubscribe.php?phone=9545551234'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://yourdomain.com/v1/unsubscribe.php?phone=9545551234'"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --output-document \\\n  - 'https://yourdomain.com/v1/unsubscribe.php?phone=9545551234'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://yourdomain.com/v1/unsubscribe.php?phone=9545551234\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/receivesms.php": {
            "get": {
                "servers": [
                    {
                        "url": "https://www.yourdomain.com"
                    }
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "SMS forwarding webhook",
                "operationId": "receiveSms",
                "description": "Configure this webhook to listen for incoming SMS messages.<br><br><br><h3>Example</h3><br>If `http://www.yourdomain.com/receivesms.php` is set as the URL for message forwarding then <br><br>`http://www.yourdomain.com/receivesms.php?from=8017555038&to=555888&subject=&text=Hello%20my%20friend`<br><br> is invoked when `801-755-5038` texts `Hello my friend` to `555888`.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "from",
                        "description": "10-digit phone number message originated from",
                        "schema": {
                            "type": "string",
                            "example": "8017555038"
                        }
                    },
                    {
                        "in": "query",
                        "name": "to",
                        "description": "10-digit phone number message is sent to",
                        "schema": {
                            "type": "string",
                            "example": "555888"
                        }
                    },
                    {
                        "in": "query",
                        "name": "subject",
                        "description": "The subject of a message (usually blank)",
                        "schema": {
                            "type": "string",
                            "example": " "
                        }
                    },
                    {
                        "in": "query",
                        "name": "text",
                        "description": "The body of receiving message that was texted in by the originating phone number",
                        "schema": {
                            "type": "string",
                            "example": "Hello my friend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\");\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\");\nvar request = new RestRequest(Method.GET);\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.get(\"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\",\n  \"method\": \"GET\",\n  \"headers\": {}\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"yourdomain.com\",\n  \"port\": null,\n  \"path\": \"/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\",\n  \"headers\": {}\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://yourdomain.com/v1/receivesms.php',\n  qs: {from: '8017555038', to: '555888', subject: ' ', text: 'Hello my friend'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"yourdomain.com\")\n\nconn.request(\"GET\", \"/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request GET \\\n  --url 'https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http GET 'https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend'"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method GET \\\n  --output-document \\\n  - 'https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://yourdomain.com/v1/receivesms.php?from=8017555038&to=555888&subject=%20&text=Hello%20my%20friend\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/receivemms.php": {
            "post": {
                "servers": [
                    {
                        "url": "https://www.yourdomain.com"
                    }
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "MMS forwarding webhook",
                "operationId": "receiveMms",
                "description": "Configure this webhook to listen for incoming MMS messages.<br><br><br><h3>Example</h3><br>Unlike SMS messages, which are forwarded using GET, MMS messages are forwarded using POST. <br><br> `http://www.yourdomain.com/receivemms.php` <br><br> With JSON body: `{ 'from': '8017555038', 'to': '555888', 'subject': '', 'text': 'Here's some pictures', 'attachments': ['https://app.simpletexting.com/files/picture1.png', 'https://app.simpletexting.com/files/picture2.png'] }`<br><br> For example, if 801-755-5038 texts “Here's some pictures” to 555888, the above query string would be sent in the HTTP message body.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "from",
                        "description": "10-digit phone number message originated from",
                        "schema": {
                            "type": "string",
                            "example": "8017555038"
                        }
                    },
                    {
                        "in": "query",
                        "name": "to",
                        "description": "10-digit phone number message is sent to",
                        "schema": {
                            "type": "string",
                            "example": "555888"
                        }
                    },
                    {
                        "in": "query",
                        "name": "subject",
                        "description": "The subject of a message",
                        "schema": {
                            "type": "string",
                            "example": " "
                        }
                    },
                    {
                        "in": "query",
                        "name": "text",
                        "description": "The body of receiving message that was texted in by the originating phone number",
                        "schema": {
                            "type": "string",
                            "example": "Here are your pictures"
                        }
                    },
                    {
                        "in": "query",
                        "name": "attachments",
                        "description": "The body of receiving message that was texted in by the originating phone number",
                        "schema": {
                            "type": "string",
                            "example": "[ https://app.simpletexting.com/files/picture1.png, https://app.simpletexting.com/files/picture2.png]"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request parameters"
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\");\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\");\nvar request = new RestRequest(Method.POST);\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\")\n  .post(null)\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\",\n  \"method\": \"POST\",\n  \"headers\": {}\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"yourdomain.com\",\n  \"port\": null,\n  \"path\": \"/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\",\n  \"headers\": {}\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://yourdomain.com/v1/receivemms.php',\n  qs: {\n    from: '8017555038',\n    to: '555888',\n    subject: ' ',\n    text: 'Here are your pictures',\n    attachments: '[ https://app.simpletexting.com/files/picture1.png, https://app.simpletexting.com/files/picture2.png]'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"yourdomain.com\")\n\nconn.request(\"POST\", \"/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D'"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --output-document \\\n  - 'https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://yourdomain.com/v1/receivemms.php?from=8017555038&to=555888&subject=%20&text=Here%20are%20your%20pictures&attachments=%5B%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture1.png%2C%20https%3A%2F%2Fapp.simpletexting.com%2Ffiles%2Fpicture2.png%5D\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/forward/setup": {
            "post": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Configure SMS forwarding",
                "operationId": "forwardSetupPost",
                "description": "Configure or update settings for message forwarding from your account. All incoming messages can be forwarded to an email, phone or URL you specify. (Messages don’t have to be forwarded to all three, but at least one must be specified.) If the URL is provided, the SimpleTexting server forwards received messages by making an HTTP GET request to the URL.<br><br>Forwarding via the API can only be configured for SMS messages. MMS forwarding must be configured by visiting the Webhooks tab on your dashboard.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "We will forward incoming messages to the email address for free",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "url",
                        "description": "We will forward incoming messages to this URL.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "We will forward incoming messages to this mobile number.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/incorrectPhoneNumber"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidEmail"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidURL"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/forward/setup',\n  qs: {\n    token: 'YOUR_API_TOKEN',\n    email: 'SOME_STRING_VALUE',\n    url: 'SOME_STRING_VALUE',\n    phone: 'SOME_STRING_VALUE'\n  },\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/forward/setup?token=YOUR_API_TOKEN&email=SOME_STRING_VALUE&url=SOME_STRING_VALUE&phone=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/send": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Send SMS message",
                "operationId": "sendSmsPost",
                "description": "Send a text message to an individual contact. Each outgoing SMS message is worth 1 credit.<br><br>If the message contains a link from a common third-party link shortener such as bit.ly, it will appear from our URL shortener instead and occupy 20 characters. [Learn more](https://help.simpletexting.com/en/articles/3362741-why-carriers-don-t-allow-bit-ly-and-other-third-party-link-shorteners)",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "10-digit phone number to send the message to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "message",
                        "description": "The body of your message (Note, cannot exceed 160 characters)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "success",
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "description": "1",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "description": "The request succeeded",
                                                    "example": "The request succeeded"
                                                },
                                                "smsid": {
                                                    "type": "string",
                                                    "example": "5bec5b9d0a975a238808ffb2",
                                                    "description": "The unique message identifier that can be used to track delivery reports using a webhook."
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/unsubscribed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidContact"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/incorrectPhoneNumber"
                                        },
                                        {
                                            "$ref": "#/components/schemas/creditLimitReached"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidMessageText"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/send',\n  qs: {\n    token: 'YOUR_API_TOKEN',\n    phone: 'SOME_STRING_VALUE',\n    message: 'SOME_STRING_VALUE'\n  },\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/send?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/sendmms": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Send MMS message",
                "operationId": "sendMmsPost",
                "description": "Send a multimedia message to an individual contact. This function accepts POST requests only. Each outgoing MMS message is worth 3 credits.<br><br>Be sure to check what [MMS filetypes](https://help.simpletexting.com/en/articles/1258733-what-file-types-can-i-send-in-an-mms) are supported by your number. Note that some devices don't support PDF files via MMS.<br><br>If a contact is unable to receive MMS, they will receive a fallback message with a link instead. It reads as follows:<br><br>*You were sent a message that contains rich media not supported by your carrier. See the full message here:  `[URL]`*<br><br>[Visit this article](https://simpletexting.com/what-carriers-can-simpletexting-reach/) to learn what carriers support MMS.<br><br>If the message contains a link from a common third-party link shortener such as bit.ly, it will appear from our URL shortener instead and occupy 20 characters. [Learn more](https://help.simpletexting.com/en/articles/3362741-why-carriers-don-t-allow-bit-ly-and-other-third-party-link-shorteners)",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "10 digit phone number to send the message to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "message",
                        "description": "The body of your MMS (1600 characters maximum)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "subject",
                        "description": "The subject of your MMS (80 characters maximum).",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mediaUrl",
                        "description": "2 link maximum. The maximum total size is 1000KB.  Images will be sent as is, without resizing.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "maxItems": 2,
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "success",
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "description": "1",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "description": "The request succeeded",
                                                    "example": "The request succeeded"
                                                },
                                                "smsid": {
                                                    "type": "string",
                                                    "example": "5bec5b9d0a975a238808ffb2",
                                                    "description": "The unique message identifier that can be used to track delivery reports using a webhook."
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/unsubscribed"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidContact"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/incorrectPhoneNumber"
                                        },
                                        {
                                            "$ref": "#/components/schemas/creditLimitReached"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidMessageText"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidSubjectText"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidMediaType"
                                        },
                                        {
                                            "$ref": "#/components/schemas/mediaUnreachable"
                                        },
                                        {
                                            "$ref": "#/components/schemas/mediaSizeExceeded"
                                        },
                                        {
                                            "$ref": "#/components/schemas/tooManyLinks"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/sendmms',\n  qs: {\n    token: 'YOUR_API_TOKEN',\n    phone: 'SOME_STRING_VALUE',\n    message: 'SOME_STRING_VALUE',\n    subject: 'SOME_STRING_VALUE',\n    mediaUrl: 'SOME_ARRAY_VALUE'\n  },\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/sendmms?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&message=SOME_STRING_VALUE&subject=SOME_STRING_VALUE&mediaUrl=SOME_ARRAY_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/messaging/check": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "Check remaining credits",
                "operationId": "checkRemainingCreditsGet",
                "description": "Retrieve your remaining credit balance for the current billing cycle. Each outgoing SMS message is worth 1 credit. Each MMS outgoing message is worth 3 credits. Incoming messages with media attached, such as photos, are considered MMS and worth 1 credit each. Incoming SMS are free! Unused credits roll over. [Learn more](https://help.simpletexting.com/en/articles/1944286-do-message-credits-rollover)",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "success",
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "description": "1",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "description": "The request succeeded",
                                                    "example": "The request succeeded"
                                                },
                                                "messagesCount": {
                                                    "type": "string",
                                                    "description": "The count of available messages",
                                                    "example": 2989
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.get(\"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\")\n  .header(\"accept\", \"application/json\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/messaging/check?token=YOUR_API_TOKEN\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://app2.simpletexting.com/v1/messaging/check',\n  qs: {token: 'YOUR_API_TOKEN'},\n  headers: {accept: 'application/json}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = { 'accept': \"application/json\" }\n\nconn.request(\"GET\", \"/v1/messaging/check?token=YOUR_API_TOKEN\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request GET \\\n  --url 'https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN' \\\n  --header 'accept: application/json'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http GET 'https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN' \\\n  accept:application/json"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method GET \\\n  --header 'accept: application/json' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\"accept\": \"application/json\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/messaging/check?token=YOUR_API_TOKEN\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/messaging/sent/list": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "List all sent campaigns",
                "operationId": "listSentCampaignsGet",
                "description": "Set a date range and view all the campaigns sent in that period. Messages sent from the Inbox will not appear in this query.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "in": "query",
                        "name": "datefrom",
                        "description": "Date from (Format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "dateto",
                        "description": "Date to (Format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "date",
                        "description": "Date (Format: YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "success",
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "description": "1",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "description": "The request succeeded",
                                                    "example": "The request succeeded"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "description": "List of campaigns",
                                                    "items": {
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "description": "Campaign status code",
                                                                "example": 0
                                                            },
                                                            "message": {
                                                                "type": "string",
                                                                "description": "Campaign status description",
                                                                "example": null
                                                            },
                                                            "id": {
                                                                "type": "string",
                                                                "description": "Campaign ID",
                                                                "example": "5ea6f3c7448ed035a675c50d"
                                                            },
                                                            "subject": {
                                                                "type": "string",
                                                                "description": "Campaign message subject (for MMS only)",
                                                                "example": "Special offer"
                                                            },
                                                            "text": {
                                                                "type": "string",
                                                                "description": "Campaign message text",
                                                                "example": "Hello! We have a special offer for you!"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "description": "Campaign date",
                                                                "example": "04/27/2020"
                                                            },
                                                            "sentCounter": {
                                                                "type": "integer",
                                                                "description": "The number of contacts the campaign message was sent to",
                                                                "example": 67
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidDate"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.get(\"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://app2.simpletexting.com/v1/messaging/sent/list',\n  qs: {\n    token: 'YOUR_API_TOKEN',\n    datefrom: 'SOME_STRING_VALUE',\n    dateto: 'SOME_STRING_VALUE',\n    date: 'SOME_STRING_VALUE'\n  },\n  headers: {accept: 'application/json}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = { 'accept': \"application/json\" }\n\nconn.request(\"GET\", \"/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request GET \\\n  --url 'https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE' \\\n  --header 'accept: application/json'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http GET 'https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE' \\\n  accept:application/json"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method GET \\\n  --header 'accept: application/json' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\"accept\": \"application/json\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/messaging/sent/list?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE&date=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/messaging/scheduled/list": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "List all scheduled campaigns",
                "operationId": "listScheduledCampaignsGet",
                "description": "SimpleTexting allows you to schedule messages for a specific time and date in the future. Use this function to view all upcoming, scheduled campaigns.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "success",
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "description": "1",
                                                    "example": 1
                                                },
                                                "messages": {
                                                    "type": "string",
                                                    "description": "The request succeeded",
                                                    "example": "The request succeeded"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "description": "List of campaigns",
                                                    "items": {
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "description": "Campaign status code",
                                                                "example": 0
                                                            },
                                                            "message": {
                                                                "type": "string",
                                                                "description": "Campaign status description",
                                                                "example": null
                                                            },
                                                            "id": {
                                                                "type": "string",
                                                                "description": "Campaign ID",
                                                                "example": "5ea6f3c7448ed035a675c41c"
                                                            },
                                                            "subject": {
                                                                "type": "string",
                                                                "description": "Campaign message subject (for MMS only)",
                                                                "example": "Special offer"
                                                            },
                                                            "text": {
                                                                "type": "string",
                                                                "description": "Campaign message text",
                                                                "example": "Hello! We have a special offer for you!"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "description": "Campaign date",
                                                                "example": "05/29/2021"
                                                            },
                                                            "sentCounter": {
                                                                "type": "integer",
                                                                "description": "The number of contacts the campaign message was sent to",
                                                                "example": 178
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.get(\"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\")\n  .header(\"accept\", \"application/json\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://app2.simpletexting.com/v1/messaging/scheduled/list',\n  qs: {token: 'YOUR_API_TOKEN'},\n  headers: {accept: 'application/json}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = { 'accept': \"application/json\" }\n\nconn.request(\"GET\", \"/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request GET \\\n  --url 'https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN' \\\n  --header 'accept: application/json'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http GET 'https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN' \\\n  accept:application/json"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method GET \\\n  --header 'accept: application/json' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\"accept\": \"application/json\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/messaging/scheduled/list?token=YOUR_API_TOKEN\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/messaging/message": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "Show campaign info",
                "operationId": "showCampaignInfoGet",
                "description": "Returns the campaign’s message, send date, and how many subscribers it sent to. If the campaign is an *MMS message* this call will also return its subject.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The campaign id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "success",
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "description": "1",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "description": "The request succeeded",
                                                    "example": "The request succeeded"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "description": "List that contains the campaign object",
                                                    "items": {
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer",
                                                                "description": "Campaign status code",
                                                                "example": 0
                                                            },
                                                            "message": {
                                                                "type": "string",
                                                                "description": "Campaign status description",
                                                                "example": null
                                                            },
                                                            "id": {
                                                                "type": "string",
                                                                "description": "Campaign ID",
                                                                "example": "5ea6f3c7448ed035a675c41c"
                                                            },
                                                            "subject": {
                                                                "type": "string",
                                                                "description": "Campaign message subject (for MMS only)",
                                                                "example": "Special offer"
                                                            },
                                                            "text": {
                                                                "type": "string",
                                                                "description": "Campaign message text",
                                                                "example": "Hello! We have a special offer for you!"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "description": "Campaign date",
                                                                "example": "05/29/2021"
                                                            },
                                                            "sentCounter": {
                                                                "type": "integer",
                                                                "description": "The number of contacts the campaign message was sent to",
                                                                "example": 178
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidCampaign"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.get(\"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://app2.simpletexting.com/v1/messaging/message',\n  qs: {token: 'YOUR_API_TOKEN', id: 'SOME_STRING_VALUE'},\n  headers: {accept: 'application/json}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = { 'accept': \"application/json\" }\n\nconn.request(\"GET\", \"/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request GET \\\n  --url 'https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE' \\\n  --header 'accept: application/json'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http GET 'https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE' \\\n  accept:application/json"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method GET \\\n  --header 'accept: application/json' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\"accept\": \"application/json\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/messaging/message?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/messaging/delete": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Remove a campaign",
                "operationId": "deleteCampaignPost",
                "description": "Delete a campaign from your account.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The campaign ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidCampaign"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/messaging/delete',\n  qs: {token: 'YOUR_API_TOKEN', id: 'SOME_STRING_VALUE'},\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/messaging/delete?token=YOUR_API_TOKEN&id=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/group/contact/list": {
            "get": {
                "tags": [
                    "Contacts"
                ],
                "summary": "List all contacts",
                "operationId": "listContactsGet",
                "description": "List all contacts",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "The list name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "success",
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "description": "1",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "description": "The request succeeded",
                                                    "example": "The request succeeded"
                                                },
                                                "contacts": {
                                                    "type": "array",
                                                    "description": "List of contacts",
                                                    "items": {
                                                        "properties": {
                                                            "number": {
                                                                "type": "string",
                                                                "description": "The contact's phone number.",
                                                                "example": "5551234567"
                                                            },
                                                            "firstName": {
                                                                "type": "string",
                                                                "description": "The contact's first name (if available)",
                                                                "example": "John"
                                                            },
                                                            "lastName": {
                                                                "type": "string",
                                                                "description": "The contact's last name (if available)",
                                                                "example": "Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "description": "The contact's email address (if available)",
                                                                "example": "john@email.com"
                                                            },
                                                            "contactId": {
                                                                "type": "string",
                                                                "description": "The contact's ID",
                                                                "example": "5ea8468244770e0b238e00e0"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "description": "Whether the contact is currently active, unsubscribed, or invalid.",
                                                                "enum": [
                                                                    "active, unsubscribed, invalid"
                                                                ],
                                                                "example": "active"
                                                            },
                                                            "addedDate": {
                                                                "type": "string",
                                                                "description": "The date when the contact was first added to the account.",
                                                                "example": "02/28/2020 03:06 PM"
                                                            },
                                                            "unsubscribedDate": {
                                                                "type": "string",
                                                                "description": "The date when the contact unsbuscribed (if applicable).",
                                                                "example": null
                                                            },
                                                            "invalidDate": {
                                                                "type": "string",
                                                                "description": "The date when contact's status changed to invalid (if applicable).  Invalid numbers are unable to receive messages.  These are most commonly landlines or VoIP numbers.",
                                                                "example": null
                                                            },
                                                            "birthday": {
                                                                "type": "string",
                                                                "description": "The contact's birthday (if available)",
                                                                "example": "01/25/1978"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidListName"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.get(\"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://app2.simpletexting.com/v1/group/contact/list',\n  qs: {token: 'YOUR_API_TOKEN', group: 'SOME_STRING_VALUE'},\n  headers: {accept: 'application/json}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = { 'accept': \"application/json\" }\n\nconn.request(\"GET\", \"/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request GET \\\n  --url 'https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE' \\\n  --header 'accept: application/json'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http GET 'https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE' \\\n  accept:application/json"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method GET \\\n  --header 'accept: application/json' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\"accept\": \"application/json\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/group/contact/list?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/group/contact/add": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Add contact to list",
                "operationId": "addContactPost",
                "description": "Add contact to list",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "The list name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "Phone number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "firstName",
                        "description": "Contact's first name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "lastName",
                        "description": "Contact's last name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "Contact's email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "comment",
                        "description": "Notes about contact",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "birthday",
                        "description": "Contact's birthday in format (mm/dd/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "customField",
                        "description": "Any custom field of a contact, where customField` must be replaced with the actual custom field’s parameter.<br><br>For example, if you have a ‘Street address’ custom field, you would use the parameter ‘street_address’.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidCustomField"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidEmail"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidListName"
                                        },
                                        {
                                            "$ref": "#/components/schemas/contactError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidContactPhone"
                                        },
                                        {
                                            "$ref": "#/components/schemas/alreadyAdded"
                                        },
                                        {
                                            "$ref": "#/components/schemas/importLimitExceeded"
                                        },
                                        {
                                            "$ref": "#/components/schemas/duplicateContact"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownCustomField"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/group/contact/add',\n  qs: {\n    token: 'YOUR_API_TOKEN',\n    group: 'SOME_STRING_VALUE',\n    phone: 'SOME_STRING_VALUE',\n    firstName: 'SOME_STRING_VALUE',\n    lastName: 'SOME_STRING_VALUE',\n    email: 'SOME_STRING_VALUE',\n    comment: 'SOME_STRING_VALUE',\n    birthday: 'SOME_STRING_VALUE',\n    customField: 'SOME_STRING_VALUE'\n  },\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/group/contact/add?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/group/contact/update": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Update a contact",
                "operationId": "contactUpdatePost",
                "description": "Update a contact’s phone number or any other field.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "The list name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "Phone number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "firstName",
                        "description": "Contact's first name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "lastName",
                        "description": "Contact's last name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "description": "Contact's email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "comment",
                        "description": "Notes about contact",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "birthday",
                        "description": "Contact's birthday in format (mm/dd/yyyy)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "customField",
                        "description": "Any custom field of a contact, where `customField` must be replaced with the actual custom field’s parameter. For example, if you have a **Street address** custom field, you would use the parameter `street_address`.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidCustomField"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidEmail"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidListName"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidContactPhone"
                                        },
                                        {
                                            "$ref": "#/components/schemas/duplicateContact"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownCustomField"
                                        },
                                        {
                                            "$ref": "#/components/schemas/contactDoesntExist"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/group/contact/update',\n  qs: {\n    token: 'YOUR_API_TOKEN',\n    group: 'SOME_STRING_VALUE',\n    phone: 'SOME_STRING_VALUE',\n    firstName: 'SOME_STRING_VALUE',\n    lastName: 'SOME_STRING_VALUE',\n    email: 'SOME_STRING_VALUE',\n    comment: 'SOME_STRING_VALUE',\n    birthday: 'SOME_STRING_VALUE',\n    customField: 'SOME_STRING_VALUE'\n  },\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/group/contact/update?token=YOUR_API_TOKEN&group=SOME_STRING_VALUE&phone=SOME_STRING_VALUE&firstName=SOME_STRING_VALUE&lastName=SOME_STRING_VALUE&email=SOME_STRING_VALUE&comment=SOME_STRING_VALUE&birthday=SOME_STRING_VALUE&customField=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/group/contact/remove": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Remove a contact from list",
                "operationId": "removeContactFromListPost",
                "description": "Remove a contact from a specific. If you don’t specify a list, the contact will be removed from all lists.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "The phone number of the contact to be removed",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "group",
                        "description": "List name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidListName"
                                        },
                                        {
                                            "$ref": "#/components/schemas/notRemoved"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidNumberPassed"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/group/contact/remove',\n  qs: {\n    token: 'YOUR_API_TOKEN',\n    phone: 'SOME_STRING_VALUE',\n    group: 'SOME_STRING_VALUE'\n  },\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/group/contact/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE&group=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/contacts/blocklist/add": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Add a contact to the unsubscribed contacts list",
                "operationId": "blockAddPost",
                "description": "Add a contact to the unsubscribed contacts list. These contacts will no longer receive messages from you unless you remove them from the list.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "The phone number of the contact to be removed",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidContactPhone"
                                        },
                                        {
                                            "$ref": "#/components/schemas/importLimitExceeded"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/contacts/blocklist/add',\n  qs: {token: 'YOUR_API_TOKEN', phone: 'SOME_STRING_VALUE'},\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/contacts/blocklist/add?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/contacts/blocklist/remove": {
            "post": {
                "tags": [
                    "Contacts"
                ],
                "summary": "Remove a contact from the unsubscribed contacts list",
                "operationId": "blockRemovePost",
                "description": "Remove a contact from the unsubscribed contacts list. Contacts can also manually resubscribe by replying “UNSTOP” to your number.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "phone",
                        "description": "The phone number of the contact to be removed",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidContactPhone"
                                        },
                                        {
                                            "$ref": "#/components/schemas/contactNotUnsubscribed"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/contacts/blocklist/remove',\n  qs: {token: 'YOUR_API_TOKEN', phone: 'SOME_STRING_VALUE'},\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/contacts/blocklist/remove?token=YOUR_API_TOKEN&phone=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/keyword/check": {
            "get": {
                "tags": [
                    "Keywords"
                ],
                "summary": "Check if a keyword is available",
                "operationId": "keywordCheckGet",
                "description": "Find out if a keyword is available on your number. If you have a dedicated number, you can create any keyword you’d like, as long as it’s not a system keyword such as STOP or HELP. On shared short code, you may find that certain keywords are already taken by other clients.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword to be checked",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/keywordAvailable"
                                        },
                                        {
                                            "$ref": "#/components/schemas/keywordUnavailable"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.get(\"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://app2.simpletexting.com/v1/keyword/check',\n  qs: {token: 'YOUR_API_TOKEN', keyword: 'SOME_STRING_VALUE'},\n  headers: {accept: 'application/json}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = { 'accept': \"application/json\" }\n\nconn.request(\"GET\", \"/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request GET \\\n  --url 'https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE' \\\n  --header 'accept: application/json'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http GET 'https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE' \\\n  accept:application/json"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method GET \\\n  --header 'accept: application/json' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\"accept\": \"application/json\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/keyword/check?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/keyword/rent": {
            "post": {
                "tags": [
                    "Keywords"
                ],
                "summary": "Rent an available keyword",
                "operationId": "keywordRentPost",
                "description": "Set up a keyword on the number associated with your account. Learn more about the [number options available](https://simpletexting.com/how-to-pick-the-right-number/) to you.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword to be rented",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidNewKeyword"
                                        },
                                        {
                                            "$ref": "#/components/schemas/keywordLimitReached"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/keyword/rent',\n  qs: {token: 'YOUR_API_TOKEN', keyword: 'SOME_STRING_VALUE'},\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/keyword/rent?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/keyword/configure": {
            "post": {
                "tags": [
                    "Keywords"
                ],
                "summary": "Configure settings for a keyword",
                "operationId": "keywordConfigurePost",
                "description": "Add a custom autoreply to a keyword on your account. You can also add an email to which you can forward new opt-ins.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword to be configured",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "autoreply",
                        "description": "Customers that text the keyword to your number will receive this message upon subscription. If you do not update this field, we will send out our default autoreply: *Thank you for joining our list*.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "optinsemail",
                        "description": "Email for opt-ins forwarding",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidOptionalParameter"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/keywordDoesNotExist"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidAutoReply"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidOptins"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/keyword/configure',\n  qs: {\n    token: 'YOUR_API_TOKEN',\n    keyword: 'SOME_STRING_VALUE',\n    autoreply: 'SOME_STRING_VALUE',\n    optinsemail: 'SOME_STRING_VALUE'\n  },\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/keyword/configure?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE&autoreply=SOME_STRING_VALUE&optinsemail=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/keyword/remove": {
            "post": {
                "tags": [
                    "Keywords"
                ],
                "summary": "Remove a keyword",
                "operationId": "removeKeywordPost",
                "description": "Remove a keyword from your account. Contacts will no longer be able to text in this keyword to join your list.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "name": "Content-Type",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/x-www-form-urlencoded"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "keyword",
                        "description": "The keyword to be removed",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/success"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/keywordDoesNotExist"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\nheaders = curl_slist_append(headers, \"content-type: application/x-www-form-urlencoded\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"accept\", \"application/json\");\nrequest.AddHeader(\"content-type\", \"application/x-www-form-urlencoded\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/x-www-form-urlencoded\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")\n  .post(null)\n  .addHeader(\"accept\", \"application/json\")\n  .addHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.post(\"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .header(\"content-type\", \"application/x-www-form-urlencoded\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\nxhr.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\",\n    \"content-type\": \"application/x-www-form-urlencoded\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'POST',\n  url: 'https://app2.simpletexting.com/v1/keyword/remove',\n  qs: {token: 'YOUR_API_TOKEN', keyword: 'SOME_STRING_VALUE'},\n  headers: {accept: 'application/json', 'content-type': 'application/x-www-form-urlencoded'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\",\n    \"content-type: application/x-www-form-urlencoded\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = {\n    'accept': \"application/json\",\n    'content-type': \"application/x-www-form-urlencoded\"\n    }\n\nconn.request(\"POST\", \"/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"accept\"] = 'application/json'\nrequest[\"content-type\"] = 'application/x-www-form-urlencoded'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request POST \\\n  --url 'https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE' \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http POST 'https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE' \\\n  accept:application/json \\\n  content-type:application/x-www-form-urlencoded"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method POST \\\n  --header 'accept: application/json' \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\n  \"accept\": \"application/json\",\n  \"content-type\": \"application/x-www-form-urlencoded\"\n]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/keyword/remove?token=YOUR_API_TOKEN&keyword=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/keyword/list": {
            "get": {
                "tags": [
                    "Keywords"
                ],
                "summary": "List all keywords",
                "operationId": "listKeyGet",
                "description": "List all the keywords currently set up on your account.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "success",
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "description": "1",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "description": "The request succeeded",
                                                    "example": "The request succeeded"
                                                },
                                                "list": {
                                                    "type": "array",
                                                    "description": "List of keywords",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "Keyword's name",
                                                                "example": "keyword"
                                                            },
                                                            "createdDate": {
                                                                "type": "string",
                                                                "description": "Keyword creation date",
                                                                "example": "04/27/2020"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/billingIssue"
                                        },
                                        {
                                            "$ref": "#/components/schemas/unknownError"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.get(\"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\")\n  .header(\"accept\", \"application/json\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/keyword/list?token=YOUR_API_TOKEN\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://app2.simpletexting.com/v1/keyword/list',\n  qs: {token: 'YOUR_API_TOKEN'},\n  headers: {accept: 'application/json}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = { 'accept': \"application/json\" }\n\nconn.request(\"GET\", \"/v1/keyword/list?token=YOUR_API_TOKEN\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request GET \\\n  --url 'https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN' \\\n  --header 'accept: application/json'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http GET 'https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN' \\\n  accept:application/json"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method GET \\\n  --header 'accept: application/json' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\"accept\": \"application/json\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/keyword/list?token=YOUR_API_TOKEN\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        },
        "/analytics/autoresponders": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Export autoresponder analytics",
                "operationId": "autorespondersGet",
                "description": "Export your autoresponder analytics in JSON or XML format via our API. The report can be filtered by date range. Fields will appear in the same order they do in SimpleTexting under Analytics -> Messaging Report -> Autoresponders.",
                "security": [
                    {
                        "ApiTokenAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json",
                                "application/xml"
                            ],
                            "default": "application/json"
                        }
                    },
                    {
                        "in": "query",
                        "name": "datefrom",
                        "description": "Analytics start date in YYYY-MM-DD format.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "dateto",
                        "description": "Analytics end date in YYYY-MM-DD format",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK > Response object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "title": "success",
                                            "type": "object",
                                            "properties": {
                                                "code": {
                                                    "type": "integer",
                                                    "description": "1",
                                                    "example": 1
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "description": "The request succeeded",
                                                    "example": "The request succeeded"
                                                },
                                                "entities": {
                                                    "type": "array",
                                                    "description": "List of autoresponders",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "description": "Autoresponder name",
                                                                "example": "List #1 Autoresponder"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "description": "Autoresponder date",
                                                                "example": "03-21-2020"
                                                            },
                                                            "sent": {
                                                                "type": "integer",
                                                                "description": "Number of autoresponder sent messages",
                                                                "example": 73
                                                            },
                                                            "received": {
                                                                "type": "integer",
                                                                "description": "Number of autoresponder received messages",
                                                                "example": 65
                                                            },
                                                            "unsubscribes": {
                                                                "type": "integer",
                                                                "description": "Number of autoresponder unsubscribes",
                                                                "example": 2
                                                            },
                                                            "message": {
                                                                "type": "string",
                                                                "description": "Autoresponder text message",
                                                                "example": "Hello! Welcome to the list!"
                                                            },
                                                            "urls": {
                                                                "type": "string",
                                                                "description": "Text message URL(s)",
                                                                "example": "https://simpletexting.com/features/"
                                                            },
                                                            "clicked": {
                                                                "type": "integer",
                                                                "description": "How many times the URL(s) from the text message was (were) clicked",
                                                                "example": 58
                                                            },
                                                            "successRate": {
                                                                "type": "integer",
                                                                "description": "The percentage of messages with delivery confirmation. It’s a real-time measurement and can fluctuate due to a variety of external factors, including disconnected phones, missing carrier IDs, and delays in delivery receipts.",
                                                                "example": 98
                                                            },
                                                            "ctr": {
                                                                "type": "integer",
                                                                "description": "The Click-Through Rate is the ratio between message URL clicks and the number of successfully delivered messages expressed as a percentage",
                                                                "example": 85
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidToken"
                                        },
                                        {
                                            "$ref": "#/components/schemas/missingRequirement"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidAnalyticDate"
                                        },
                                        {
                                            "$ref": "#/components/schemas/invalidDateFormat"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "c_libcurl",
                        "label": "C + Libcurl",
                        "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
                    },
                    {
                        "lang": "csharp_restsharp",
                        "label": "C# + RestSharp",
                        "source": "var client = new RestClient(\"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
                    },
                    {
                        "lang": "go_native",
                        "label": "Go (native)",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "java_okhttp",
                        "label": "Java + OkHttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"accept\", \"application/json\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "java_unirest",
                        "label": "Java + Unirest",
                        "source": "HttpResponse<String> response = Unirest.get(\"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\")\n  .header(\"accept\", \"application/json\")\n  .asString();"
                    },
                    {
                        "lang": "javascript_jquery",
                        "label": "JavaScript + jQuery AJAX",
                        "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
                    },
                    {
                        "lang": "javascript_xhr",
                        "label": "JavaScript + XHR (XmlHttpRequest)",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"accept\", \"application/json\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "node_native",
                        "label": "Node.js (native)",
                        "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"app2.simpletexting.com\",\n  \"port\": null,\n  \"path\": \"/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"accept\": \"application/json\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
                    },
                    {
                        "lang": "node_request",
                        "label": "Node.js + Request",
                        "source": "var request = require(\"request\");\n\nvar options = {\n  method: 'GET',\n  url: 'https://app2.simpletexting.com/v1/analytics/autoresponders',\n  qs: {\n    token: 'YOUR_API_TOKEN',\n    datefrom: 'SOME_STRING_VALUE',\n    dateto: 'SOME_STRING_VALUE'\n  },\n  headers: {accept: 'application/json}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
                    },
                    {
                        "lang": "php_curl",
                        "label": "PHP cURL",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"accept: application/json\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "python_python3",
                        "label": "Python3 (native)",
                        "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"app2.simpletexting.com\")\n\nheaders = { 'accept': \"application/json\" }\n\nconn.request(\"GET\", \"/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "ruby_native",
                        "label": "Ruby (native)",
                        "source": "require 'uri'\nrequire 'net/http'\nrequire 'openssl'\n\nurl = URI(\"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"accept\"] = 'application/json'\n\nresponse = http.request(request)\nputs response.read_body"
                    },
                    {
                        "lang": "shell_curl",
                        "label": "Shell + cURL",
                        "source": "curl --request GET \\\n  --url 'https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE' \\\n  --header 'accept: application/json'"
                    },
                    {
                        "lang": "shell_httpie",
                        "label": "Shell + HTTPie",
                        "source": "http GET 'https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE' \\\n  accept:application/json"
                    },
                    {
                        "lang": "shell_wget",
                        "label": "Shell + Wget",
                        "source": "wget --quiet \\\n  --method GET \\\n  --header 'accept: application/json' \\\n  --output-document \\\n  - 'https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE'"
                    },
                    {
                        "lang": "swift_nsurlsession",
                        "label": "Swift + NSURLSession",
                        "source": "import Foundation\n\nlet headers = [\"accept\": \"application/json\"]\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://app2.simpletexting.com/v1/analytics/autoresponders?token=YOUR_API_TOKEN&datefrom=SOME_STRING_VALUE&dateto=SOME_STRING_VALUE\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "success": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "1",
                        "example": 1
                    },
                    "message": {
                        "type": "string",
                        "description": "The request succeeded",
                        "example": "The request succeeded"
                    }
                }
            },
            "keywordAvailable": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "1",
                        "example": 1
                    },
                    "message": {
                        "type": "string",
                        "description": "The keyword is available",
                        "example": "The keyword is available"
                    }
                }
            },
            "keywordUnavailable": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "0",
                        "example": 0
                    },
                    "message": {
                        "type": "string",
                        "description": "The keyword is unavailable",
                        "example": "The keyword is unavailable"
                    }
                }
            },
            "unsubscribed": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "0",
                        "example": 0
                    },
                    "message": {
                        "type": "string",
                        "description": "Phone number unsubscribed locally or globally.",
                        "example": "Phone number unsubscribed locally or globally."
                    }
                }
            },
            "invalidToken": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "-1",
                        "example": -1
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid API token or API is not allowed for your account.",
                        "example": "Invalid API token or API is not allowed for your account."
                    }
                }
            },
            "invalidOptionalParameter": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-2",
                        "example": -2
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid optional parameter",
                        "example": "Invalid optional parameter"
                    }
                }
            },
            "missingRequirement": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-3",
                        "example": -3
                    },
                    "message": {
                        "type": "string",
                        "description": "Required parameter is not specified",
                        "example": "Required parameter is not specified"
                    }
                }
            },
            "invalidCustomField": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-4",
                        "example": -4
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid 'customField'",
                        "example": "Invalid 'customField'"
                    }
                }
            },
            "invalidContact": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-5",
                        "example": -5
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid Contact",
                        "example": "Invalid Contact"
                    }
                }
            },
            "billingIssue": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-7",
                        "example": -7
                    },
                    "message": {
                        "type": "string",
                        "description": "Billing issue. No Credits.  Contact [support@simpletexting.com](support@simpletexting.com)",
                        "example": "Billing issue. No Credits.  Contact [support@simpletexting.com](support@simpletexting.com)"
                    }
                }
            },
            "unknownError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-10",
                        "example": -10
                    },
                    "message": {
                        "type": "string",
                        "description": "Unknown error (please contact our support dept.)",
                        "example": "Unknown error (please contact our support dept.)"
                    }
                }
            },
            "keywordDoesNotExist": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-101",
                        "example": -101
                    },
                    "message": {
                        "type": "string",
                        "description": "Keyword with this name doesn't exist",
                        "example": "Keyword with this name doesn't exist"
                    }
                }
            },
            "invalidNewKeyword": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-102",
                        "example": -102
                    },
                    "message": {
                        "type": "string",
                        "description": "New keyword is invalid or not available",
                        "example": "New keyword is invalid or not available"
                    }
                }
            },
            "invalidAutoReply": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-103",
                        "example": -103
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid autoreply message (message exceeds maximum number of characters)",
                        "example": "Invalid autoreply message (message exceeds maximum number of characters)"
                    }
                }
            },
            "invalidOptins": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-104",
                        "example": -104
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid email for opt-ins forwarding",
                        "example": "Invalid email for opt-ins forwarding"
                    }
                }
            },
            "keywordLimitReached": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-105",
                        "example": -105
                    },
                    "message": {
                        "type": "string",
                        "description": "Limit of keywords is reached",
                        "example": "Limit of keywords is reached"
                    }
                }
            },
            "incorrectPhoneNumber": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-300",
                        "example": -300
                    },
                    "message": {
                        "type": "string",
                        "description": "Incorrect phone number",
                        "example": "Incorrect phone number"
                    }
                }
            },
            "creditLimitReached": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-303",
                        "example": -303
                    },
                    "message": {
                        "type": "string",
                        "description": "Credit limit reached",
                        "example": "Credit limit reached"
                    }
                }
            },
            "invalidMessageText": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-304",
                        "example": -304
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid Message text (exceeds maximum number of characters)",
                        "example": "Invalid Message text (exceeds maximum number of characters)"
                    }
                }
            },
            "invalidSubjectText": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-305",
                        "example": -305
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid Subject text (exceeds maximum number of characters)",
                        "example": "Invalid Subject text (exceeds maximum number of characters)"
                    }
                }
            },
            "invalidMediaType": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-310",
                        "example": -310
                    },
                    "message": {
                        "type": "string",
                        "description": "Media type unsupported",
                        "example": "Media type unsupported"
                    }
                }
            },
            "mediaUnreachable": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-311",
                        "example": -311
                    },
                    "message": {
                        "type": "string",
                        "description": "Media is unreachable",
                        "example": "Media is unreachable"
                    }
                }
            },
            "mediaSizeExceeded": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-312",
                        "example": -312
                    },
                    "message": {
                        "type": "string",
                        "description": "Media size exceeds 10000 KB Limit",
                        "example": "Media size exceeds 10000 KB Limit"
                    }
                }
            },
            "tooManyLinks": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-313",
                        "example": -313
                    },
                    "message": {
                        "type": "string",
                        "description": "Link limit exceeded",
                        "example": "Link limit exceeded"
                    }
                }
            },
            "invalidEmail": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-400",
                        "example": -400
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid email address",
                        "example": "Invalid email address"
                    }
                }
            },
            "invalidURL": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-401",
                        "example": -401
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid URL",
                        "example": "Invalid URL"
                    }
                }
            },
            "invalidListName": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-600",
                        "example": -600
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid List name",
                        "example": "Invalid List name"
                    }
                }
            },
            "contactError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-601",
                        "example": -601
                    },
                    "message": {
                        "type": "string",
                        "description": "Contact hasn't been added to the list. Please contact support.",
                        "example": "Contact hasn't been added to the list. Please contact support."
                    }
                }
            },
            "notRemoved": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-603",
                        "example": -603
                    },
                    "message": {
                        "type": "string",
                        "description": "The contact has not been removed.  Please contact our support dept.",
                        "example": "The contact has not been removed.  Please contact our support dept."
                    }
                }
            },
            "invalidContactPhone": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-604",
                        "example": -604
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid phone number",
                        "example": "Invalid phone number"
                    }
                }
            },
            "invalidNumberPassed": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-605",
                        "example": -605
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid contact ID or phone number passed",
                        "example": "Invalid contact ID or phone number passed"
                    }
                }
            },
            "alreadyAdded": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-607",
                        "example": -607
                    },
                    "message": {
                        "type": "string",
                        "description": "Contact is already on the list",
                        "example": "Contact is already on the list"
                    }
                }
            },
            "importLimitExceeded": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-608",
                        "example": -608
                    },
                    "message": {
                        "type": "string",
                        "description": "Import limit exceeded, please contact support in order to increase the daily limit",
                        "example": "Import limit exceeded, please contact support in order to increase the daily limit"
                    }
                }
            },
            "contactNotUnsubscribed": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-609",
                        "example": -609
                    },
                    "message": {
                        "type": "string",
                        "description": "The contact is not on the Unsubscribed Group List",
                        "example": "The contact is not on the Unsubscribed Group List"
                    }
                }
            },
            "duplicateContact": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-610",
                        "example": -610
                    },
                    "message": {
                        "type": "string",
                        "description": "Contact with the same email address already exists",
                        "example": "Contact with the same email address already exists"
                    }
                }
            },
            "unknownCustomField": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-611",
                        "example": -611
                    },
                    "message": {
                        "type": "string",
                        "description": "Unknown custom field",
                        "example": "Unknown custom field"
                    }
                }
            },
            "contactDoesntExist": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-612",
                        "example": -612
                    },
                    "message": {
                        "type": "string",
                        "description": "Contact doesn't exist",
                        "example": "Contact doesn't exist"
                    }
                }
            },
            "invalidAnalyticDate": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-700",
                        "example": -700
                    },
                    "message": {
                        "type": "string",
                        "description": "invalid date",
                        "example": "invalid date"
                    }
                }
            },
            "invalidCampaign": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-802",
                        "example": -802
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid campaign ID",
                        "example": "Invalid campaign ID"
                    }
                }
            },
            "invalidDate": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-803",
                        "example": -803
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid date format, date format must be YYYY-MM-DD or YYYY-MM-DD:MM",
                        "example": "Invalid date format, date format must be YYYY-MM-DD or YYYY-MM-DD:MM"
                    }
                }
            },
            "invalidDateFormat": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "-804",
                        "example": -804
                    },
                    "message": {
                        "type": "string",
                        "description": "Invalid date format, date format must be YYYY-MM-DD",
                        "example": "Invalid date format, date format must be YYYY-MM-DD"
                    }
                }
            }
        },
        "securitySchemes": {
            "Api Token Auth": {
                "type": "apiKey",
                "name": "token",
                "in": "query",
                "description": "Using your API key, you can authenticate your account directly in the URL parameter of your request. Please note, this method is less secure than the Bearer Token method recommended below."
            },
            "Bearer Token": {
                "type": "http",
                "scheme": "bearer",
                "description": "Our API also supports Bearer Token authentication. We recommend this method for a more secure connection.<br><br>To understand more about bearer tokens, please take a look at the following [resource](https://swagger.io/docs/specification/authentication/bearer-authentication/).",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}